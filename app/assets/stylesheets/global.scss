// -----------------------------------------------------
// utility
// -----------------------------------------------------
//メディアクエリ
@mixin max-lg {
    @media (max-width: map-get($grid-breakpoints,lg)) {
        @content;
    }
}
@mixin max-md {
    @media (max-width: map-get($grid-breakpoints,md)) {
        @content;
    }
}
@mixin max-sm {
    @media (max-width: map-get($grid-breakpoints, sm)) {
        @content;
    }
}
@mixin max-md-val {
    @media (max-width: map-get($grid-breakpoints,md)-val) {
        @content;
    }
}
@mixin min-md {
    @media (min-width: map-get($grid-breakpoints,md)) {
        @content;
    }
}
@mixin min-sm {
    @media (min-width: map-get($grid-breakpoints, sm)) {
        @content;
    }
}
@mixin min-lg {
    @media (min-width: map-get($grid-breakpoints, lg)) {
        @content;
    }
}
@mixin max-smafo {
    @media (max-width: 480px) {
        @content;
    }
}


/*--------------------------------------------------------------------
汎用スタイル
---------------------------------------------------------------------*/

//5カラム定義
.col-xs-15, .col-sm-15, .col-md-15, .col-lg-15 {
    position: relative;
    min-height: 1px;
    padding-right: 10px;
    padding-left: 10px;
}
.col-xs-15 {
    width: 20%;
    flex: 0 0 20%;
    float: left;
}
@media (min-width: map-get($grid-breakpoints, sm)) {
    .col-sm-15 {
        width: 20%;
        flex: 0 0 20%;
        float: left;
    }
}
@media (min-width: map-get($grid-breakpoints,md)) {
    .col-md-15 {
        width: 20%;
        flex: 0 0 20%;
        float: left;
    }
    .col-md-offset-15 {
        margin-left: 4.3333333%;
    }
}
@media (min-width: map-get($grid-breakpoints, lg)) {
    .col-lg-15 {
        width: 20%;
        flex: 0 0 20%;
        float: left;
    }
}

//スペース
.pd-l-0 {
    padding-left: 0px !important;
}
.pd-r-0 {
    padding-right: 0px !important;
}

@media (max-width: map-get($grid-breakpoints,sm)) {
    .sm-pd-0 {
        padding-left: 0px;
        padding-right: 0px;
        max-width: 100%;
    }
    .sm-pd-r-0 {
        padding-right: 0px;
    }
    .sm-pd-l-0 {
        padding-left: 0px;
    }
    .sm-pd-t-0 {
        padding-top: 0px;
    }
    .sm-pd-b-0 {
        padding-bottom: 0px;
    }
}
@media (max-width: map-get($grid-breakpoints,md)) {
    .md-pd-0 {
        padding-left: 0px;
        padding-right: 0px;
        max-width: 100%;
    }
}
$i:100;
@while $i > -1 {
    .mg-l-#{$i} {
        margin-left: #{$i}px !important;
    }
    .mg-r-#{$i} {
        margin-right: #{$i}px !important;
    }
    $i: $i - 5;
}
$i:100;
@while $i > -1 {
    .mg-t-#{$i} {
        margin-top: #{$i}px !important;
    }
    .mg-b-#{$i} {
        margin-bottom: #{$i}px !important;
    }
    $i: $i - 5;
}

@media (max-width: map-get($grid-breakpoints, md)) {
    $s:100;
    @while $s > -1 {
        .md-mg-t-#{$s} {
            margin-top: #{$s}px !important;
        }
        .md-mg-b-#{$s} {
            margin-bottom: #{$s}px !important;
        }
        $s: $s - 5;
    }
}

@media (max-width: map-get($grid-breakpoints, lg)) {
    $s:100;
    @while $s > -1 {
        .lg-mg-t-#{$s} {
            margin-top: #{$s}px !important;
        }
        .lg-mg-b-#{$s} {
            margin-bottom: #{$s}px !important;
        }
        $s: $s - 5;
    }
}
@media (max-width: map-get($grid-breakpoints, sm)) {
    $s:100;
    @while $s > -1 {
        .sm-mg-t-#{$s} {
            margin-top: #{$s}px !important;
        }
        .sm-mg-b-#{$s} {
            margin-bottom: #{$s}px !important;
        }
        $s: $s - 5;
    }
}

$i:100;
@while $i >= 0 {
    .pd-t-#{$i} {
        padding-top: #{$i}px !important;
    }
    .pd-b-#{$i} {
        padding-bottom: #{$i}px !important;
    }
    $i: $i - 5;
}

@media (max-width: map-get($grid-breakpoints, sm)) {
    $s:100;
    @while $s >= 0 {
        .sm-pd-t-#{$s} {
            padding-top: #{$s}px !important;
        }
        .sm-pd-b-#{$s} {
            padding-bottom: #{$s}px !important;
        }
        $s: $s - 5;
    }
}

$i:100;
@while $i >= 0 {
    .pd-l-#{$i} {
        padding-left: #{$i}px !important;
    }
    .pd-r-#{$i} {
        padding-right: #{$i}px !important;
    }
    $i: $i - 5;
}

@media (max-width: map-get($grid-breakpoints, lg)) {
    $s:100;
    @while $s >= 0 {
        .lg-pd-l-#{$s} {
            padding-left: #{$s}px !important;
        }
        .lg-pd-r-#{$s} {
            padding-right: #{$s}px !important;
        }
        $s: $s - 5;
    }
}
@media (max-width: map-get($grid-breakpoints, md)) {
    $s:100;
    @while $s >= 0 {
        .md-pd-l-#{$s} {
            padding-left: #{$s}px !important;
        }
        .md-pd-r-#{$s} {
            padding-right: #{$s}px !important;
        }
        $s: $s - 5;
    }
}
@media (max-width: map-get($grid-breakpoints, sm)) {
    $s:100;
    @while $s >= 0 {
        .sm-pd-l-#{$s} {
            padding-left: #{$s}px !important;
        }
        .sm-pd-r-#{$s} {
            padding-right: #{$s}px !important;
        }
        $s: $s - 5;
    }
}

//widthサイズ変更
$s:100;
@while $s >= 0 {
    .width-#{$s} {
        width: #{$s} * 1% !important;
    }
    .sm-pd-r-#{$s} {
        width: #{$s} * 1% !important;
    }
    $s: $s - 5;
}

$i:1200;
@while $i >= 0 {
    .w-#{$i} {
        max-width: #{$i}px;
        margin: auto;
    }
    $i: $i - 100;
}

// text-center-sm
.text-center-sm {
    @include min-sm {
        text-align: center;
    }
}

//gutter設定
.no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
        padding-right: 0;
        padding-left: 0;
    }
}

.l-gutters-min-sm {
    margin-right: -15px;
    margin-left: -15px;

    > .col,
    > [class*="col-"] {
        @include min-sm {
            padding-right: 30px;
            padding-left: 30px;
        }
    }
}
